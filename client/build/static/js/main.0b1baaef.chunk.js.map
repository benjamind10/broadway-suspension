{"version":3,"sources":["assets/spinner.gif","assets/casterplate.png","assets/e90coilover.png","assets/hero-logo.png","assets/shoppingcart.svg","assets/bws-logo.png","serviceWorker.js","utils/reducers.js","utils/actions.js","utils/GlobalState.js","components/home-hero/home-hero.component.jsx","components/review-cards/review-cards.component.jsx","pages/Home.jsx","utils/queries.js","utils/helpers.js","components/cart-item/cart-item.component.jsx","utils/auth.js","components/cart/cart.component.jsx","pages/Detail.jsx","components/jumbotron/jumbotron.component.jsx","pages/NoMatch.jsx","utils/mutations.js","pages/Login.jsx","pages/Signup.jsx","components/navigation/navigation.component.jsx","pages/OrderHistory.jsx","components/footer/footer.component.jsx","pages/Success.jsx","components/form/form.component.jsx","components/information/information.component.jsx","pages/About.jsx","components/payment-form/payment-form.component.jsx","components/checkout-item/checkout-item.component.jsx","pages/checkout/Checkout.jsx","components/product-item/product-item.component.jsx","components/product-list/product-list.component.jsx","pages/Shop.jsx","App.js","utils/stripe.js","index.js"],"names":["module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","reducer","action","type","products","categories","currentCategory","cartOpen","cart","product","newState","filter","_id","length","map","purchaseQuantity","StoreContext","createContext","Provider","StoreProvider","value","initialState","props","useReducer","dispatch","useStoreContext","useContext","HomeHero","className","to","src","EngineeringPic","alt","HeroLogo","CoiloverPic","ReviewCards","title","body","author","review","idx","key","aria-hidden","focusable","role","viewBox","d","fill","fill-rule","Home","QUERY_PRODUCTS","gql","QUERY_CATEGORIES","QUERY_USER","QUERY_CHECKOUT","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","onsuccess","transaction","objectStore","put","all","getAll","delete","oncomplete","close","CartItem","item","image","name","price","placeholder","onChange","target","parseInt","style","color","aria-label","onClick","removeFromCart","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","assign","removeItem","stripePromise","loadStripe","Cart","history","useHistory","useLazyQuery","data","toggleCart","useEffect","a","getCart","res","redirectToCheckout","sessionId","checkout","session","CartIcon","sum","forEach","toFixed","calculateTotal","Auth","loggedIn","push","Detail","id","useParams","useState","currentProduct","setCurrentProduct","useQuery","loading","find","indexedProducts","Button","goBack","description","itemInCart","cartItem","disabled","p","spinner","Jumbotron","children","height","clear","paddingTop","textAlign","NoMatch","LOGIN","ADD_ORDER","ADD_USER","Login","email","password","formState","setFormState","useMutation","login","handleFormSubmit","event","preventDefault","variables","mutationResponse","handleChange","onSubmit","htmlFor","Signup","addUser","firstName","lastName","Navigation","categoryData","showNavigation","Nav","pullRight","Item","href","logout","category","BwsLogo","Navbar","Dropdown","pullLeft","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","index","width","Footer","getFullYear","class","Success","addOrder","setTimeout","saveOrder","Form","required","Info","Container","data-toggle","data-target","aria-expanded","aria-controls","aria-labelledby","data-parent","About","PaymentForm","cartItems","cartTotal","stripe","useStripe","elements","useElements","setIsProcessingPayment","paymentHandler","fetch","headers","JSON","stringify","amount","json","response","clientSecret","client_secret","confirmCardPayment","payment_method","card","getElement","CardElement","billing_details","paymentResult","alert","message","paymentIntent","status","CheckoutItem","Checkout","ProductItem","quantity","count","pluralize","variant","ProductList","Shop","httpLink","createHttpLink","uri","authLink","setContext","_","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","exact","path","component","CheckoutPage","process","REACT_APP_STRIPE_PUBLISHABLE_KEY","ReactDOM","render","StrictMode","document","getElementById","URL","origin","addEventListener","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.0b1baaef.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.ab497855.gif\";","module.exports = __webpack_public_path__ + \"static/media/casterplate.51db1e05.png\";","module.exports = __webpack_public_path__ + \"static/media/e90coilover.414ecc74.png\";","module.exports = __webpack_public_path__ + \"static/media/hero-logo.da8a2a0a.png\";","module.exports = __webpack_public_path__ + \"static/media/shoppingcart.1f2514a6.svg\";","module.exports = __webpack_public_path__ + \"static/media/bws-logo.82be6e02.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n  UPDATE_PRODUCTS,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  ADD_TO_CART,\n  ADD_MULTIPLE_TO_CART,\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  CLEAR_CART,\n  TOGGLE_CART,\n} from './actions';\nimport { useReducer } from 'react';\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    // if action type value is the value of `UPDATE_PRODUCTS`, return a new state object with an updated products array\n    case UPDATE_PRODUCTS:\n      return {\n        ...state,\n        products: [...action.products],\n      };\n    // if action type value is the value of `UPDATE_CATEGORIES`, return a new state object with an updated categories array\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories],\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      console.log('Switch ', action);\n      return {\n        ...state,\n        currentCategory: action.currentCategory,\n      };\n\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.product],\n      };\n\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.products],\n      };\n\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter(product => {\n        return product._id !== action._id;\n      });\n\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState,\n      };\n\n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: state.cart.map(product => {\n          if (action._id === product._id) {\n            product.purchaseQuantity = action.purchaseQuantity;\n          }\n          return product;\n        }),\n      };\n\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: [],\n      };\n\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport function useProductReducer(initialState) {\n  return useReducer(reducer, initialState);\n}\n","export const UPDATE_PRODUCTS = 'UPDATE_PRODUCTS';\nexport const UPDATE_CATEGORIES = 'UPDATE_CATEGORIES';\nexport const UPDATE_CURRENT_CATEGORY = 'UPDATE_CURRENT_CATEGORY';\nexport const ADD_TO_CART = 'ADD_TO_CART';\nexport const ADD_MULTIPLE_TO_CART = 'ADD_MULTIPLE_TO_CART';\nexport const REMOVE_FROM_CART = 'REMOVE_FROM_CART';\nexport const UPDATE_CART_QUANTITY = 'UPDATE_CART_QUANTITY';\nexport const CLEAR_CART = 'CLEAR_CART';\nexport const TOGGLE_CART = 'TOGGLE_CART';\n","import React, { createContext, useContext } from 'react';\nimport { useProductReducer } from './reducers';\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst StoreProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useProductReducer({\n    products: [],\n    cart: [],\n    cartOpen: false,\n    categories: [],\n    currentCategory: '',\n  });\n  // use this to confirm it works!\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport EngineeringPic from '../../assets/casterplate.png';\nimport CoiloverPic from '../../assets/e90coilover.png';\nimport HeroLogo from '../../assets/hero-logo.png';\n\nimport './home-hero.styles.css';\n\nconst HomeHero = () => {\n  return (\n    <div className='container hero-container pt-3'>\n      <div className='row justify-content-center'>\n        <Link\n          to='/about'\n          className='col-12 col-md-6 eng-hero-img p-0'\n        >\n          <img src={EngineeringPic} alt='Engineering process' />\n          <div className='engineering-text text-center text-white p-4'>\n            <h6 className='desktop-text'>Learn more about our engineering process...</h6>\n          </div>\n        </Link>\n\n        <div className='hero-logo text-center'>\n          <img src={HeroLogo} alt='BWS 10 Year Anniversary' />\n        </div>\n\n        <Link\n          to='/about'\n          className='col-12 col-md-6 coil-hero-img p-0'\n        >\n          <img src={CoiloverPic} alt='Coilovers' />\n          <div className='coilover-text text-white text-center p-4'>\n            <h6 className='desktop-text'>Learn more about our suspension products...</h6>\n          </div>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default HomeHero;\n","import React from 'react';\n\nimport './review-cards.styles.css';\n\nconst ReviewCards = () => {\n  const reviews = [\n    {\n      title: 'Best coilovers ever made.',\n      body: 'These are by far the best coilovers I’ve ever seen and ran on my cars. Worth every single penny and will definitely be running broadways on every car I can.',\n      author: 'Anonymous Verified Purchaser',\n    },\n    {\n      title: 'Worth Every Penny.',\n      body: 'Saying these are high quality is an understatement. Blown away at how nice they are and how nice they ride. Shipped them on Friday and I had them Sunday. Best company I’ve ever dealt with. 10/10 recommend.',\n      author: 'Tyler H. Verified Purchaser',\n    },\n    {\n      title: 'These guys are legitimately the best.',\n      body: 'Call them up with any questions, you’ll never be placed on hold... Order some coilovers, and you’ll have one of the best pieces of suspension on the market from the best team available.',\n      author: 'Javan H. Verified Purchaser',\n    },\n  ];\n\n  return (\n    <div className='container p-4'>\n      <h2 className='review-title text-center py-4'>\n        <span>Where research and precision engineering meet; </span>\n        <br />\n        <span className='font-weight-bold font-italic'>\n          style is expected.\n        </span>\n      </h2>\n      <div className='row justify-content-around review-card-container p-4'>\n        {reviews.map((review, idx) => (\n          <div key={idx} className='card review-card border-0'>\n            <div className='card-body'>\n              <svg\n                aria-hidden='true'\n                focusable='false'\n                role='presentation'\n                className='icon icon-quote'\n                viewBox='0 0 41 35'\n              >\n                <path\n                  d='M10.208 17.711h6.124v16.332H0V21.684C0 8.184 5.444.956 16.332 0v6.125c-4.083 1.14-6.124 4.414-6.124 9.82v1.766zm24.498 0h6.124v16.332H24.498V21.684C24.498 8.184 29.942.956 40.83 0v6.125c-4.083 1.14-6.124 4.414-6.124 9.82v1.766z'\n                  fill='#000'\n                  fill-rule='evenodd'\n                ></path>\n              </svg>\n              <h5 className='card-title'>{review.title}</h5>\n              <p className='card-text'>{review.body}</p>\n            </div>\n            <h6 className='card-subtitle text-muted m-2'>\n              - {review.author}\n            </h6>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ReviewCards;\n","import React from 'react';\n\nimport HomeHero from '../components/home-hero/home-hero.component';\nimport ReviewCards from '../components/review-cards/review-cards.component';\n\nconst Home = () => {\n  return (\n    <div className='container'>\n      <HomeHero />\n      <ReviewCards />\n    </div>\n  );\n};\n\nexport default Home;\n","import { gql } from '@apollo/client';\n\nexport const QUERY_PRODUCTS = gql`\n  query getProducts($category: ID) {\n    products(category: $category) {\n      _id\n      name\n      description\n      price\n      quantity\n      image\n      category {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_ALL_PRODUCTS = gql`\n  {\n    products {\n      _id\n      name\n      description\n      price\n      quantity\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n  {\n    categories {\n      _id\n      name\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      firstName\n      lastName\n      orders {\n        _id\n        purchaseDate\n        products {\n          _id\n          name\n          description\n          price\n          quantity\n          image\n        }\n      }\n    }\n  }\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($products: [ID]!) {\n    checkout(products: $products) {\n      session\n    }\n  }\n`;\n","export function pluralize(name, count) {\n  if (count === 1) {\n    return name;\n  }\n  return name + 's';\n}\n\nexport function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    // open connection to the database `shop-shop` with the version of 1\n    const request = window.indexedDB.open('shop-shop', 1);\n\n    // create variables to hold reference to the database, transaction (tx), and object store\n    let db, tx, store;\n\n    // if version has changed (or if this is the first time using the database), run this method and create the three object stores\n    request.onupgradeneeded = function (e) {\n      const db = request.result;\n      // create object store for each type of data and set \"primary\" key index to be the `_id` of the data\n      db.createObjectStore('products', { keyPath: '_id' });\n      db.createObjectStore('categories', { keyPath: '_id' });\n      db.createObjectStore('cart', { keyPath: '_id' });\n    };\n\n    // handle any errors with connecting\n    request.onerror = function (e) {\n      console.log('There was an error');\n    };\n    // on database open success\n    request.onsuccess = function (e) {\n      // save a reference of the database to the `db` variable\n      db = request.result;\n      // open a transaction do whatever we pass into `storeName` (must match one of the object store names)\n      tx = db.transaction(storeName, 'readwrite');\n      // save a reference to that object store\n      store = tx.objectStore(storeName);\n\n      // if there's any errors, let us know\n      db.onerror = function (e) {\n        console.log('error', e);\n      };\n\n      switch (method) {\n        case 'put':\n          store.put(object);\n          resolve(object);\n          break;\n        case 'get':\n          const all = store.getAll();\n          all.onsuccess = function () {\n            resolve(all.result);\n          };\n          break;\n        case 'delete':\n          store.delete(object._id);\n          break;\n        default:\n          console.log('No valid method');\n          break;\n      }\n\n      // when the transaction is complete, close the connection\n      tx.oncomplete = function () {\n        db.close();\n      };\n    };\n  });\n}\n","import React from 'react';\n\nimport { useStoreContext } from '../../utils/GlobalState';\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n} from '../../utils/actions';\nimport { idbPromise } from '../../utils/helpers';\n\nconst CartItem = ({ item }) => {\n  const [state, dispatch] = useStoreContext();\n\n  const removeFromCart = item => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id,\n    });\n    idbPromise('cart', 'delete', { ...item });\n  };\n\n  const onChange = e => {\n    const value = e.target.value;\n\n    if (value === '0') {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id,\n      });\n\n      idbPromise('cart', 'delete', { ...item });\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value),\n      });\n\n      idbPromise('cart', 'put', {\n        ...item,\n        purchaseQuantity: parseInt(value),\n      });\n    }\n  };\n\n  return (\n    <div className='flex-row bg-dark p-2 rounded-bottom'>\n      <div>\n        <img src={`/images/${item.image}`} alt='' />\n      </div>\n      <div>\n        <div>\n          <p className='font-italic '>\n            <span className='font-weight-bold'>{item.name}</span>: $\n            {item.price}\n          </p>\n        </div>\n        <div>\n          <span>Qty:</span>\n          <input\n            type='number'\n            placeholder='1'\n            value={item.purchaseQuantity}\n            onChange={onChange}\n            style={{ color: 'black' }}\n          />\n\n          <span\n            role='img'\n            aria-label='trash'\n            onClick={() => removeFromCart(item)}\n          >\n            🗑️\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CartItem;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/client';\n\nimport CartItem from '../cart-item/cart-item.component';\nimport Auth from '../../utils/auth';\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport {\n  TOGGLE_CART,\n  ADD_MULTIPLE_TO_CART,\n} from '../../utils/actions';\nimport { idbPromise } from '../../utils/helpers';\nimport CartIcon from '../../assets/shoppingcart.svg';\n\nimport './cart.styles.css';\n\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst Cart = () => {\n  const [state, dispatch] = useStoreContext();\n  const history = useHistory();\n\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise('cart', 'get');\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n    }\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n\n  function toggleCart() {\n    dispatch({ type: TOGGLE_CART });\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    state.cart.forEach(item => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  useEffect(() => {\n    if (data) {\n      stripePromise.then(res => {\n        res.redirectToCheckout({ sessionId: data.checkout.session });\n      });\n    }\n  }, [data]);\n\n  if (!state.cartOpen) {\n    return (\n      <div className='cart-closed' onClick={toggleCart}>\n        <span role='img' aria-label='trash'>\n          <img\n            className='cart-icon'\n            src={CartIcon}\n            alt='shopping cart'\n          />\n        </span>\n      </div>\n    );\n  }\n\n  const routeChange = () => {\n    let path = `/checkout`;\n    history.push(path);\n  };\n\n  return (\n    <div className='cart cart-styles text-light'>\n      <div className='close' onClick={toggleCart}>\n        <h8>[close]</h8>\n      </div>\n      <div className='cart-header mt-4'>\n        <h2 className='font-italic'>Shopping Cart</h2>\n      </div>\n      {state.cart.length ? (\n        <div>\n          {state.cart.map(item => (\n            <CartItem key={item._id} item={item} />\n          ))}\n          <div className='row space-between justify-content-center text-center'>\n            <h6 className='col-12'>Total: ${calculateTotal()}</h6>\n            {Auth.loggedIn() ? (\n              <button\n                onClick={routeChange}\n                className='btn btn-primary m-1 col-10'\n              >\n                Checkout\n              </button>\n            ) : (\n              <span>\n                <h6>(log in to check out)</h6>\n              </span>\n            )}\n          </div>\n        </div>\n      ) : (\n        <h3>You haven't added anything to your cart yet!</h3>\n      )}\n    </div>\n  );\n};\n\nexport default Cart;\n","import React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { Button } from 'react-bootstrap';\n\nimport { QUERY_PRODUCTS } from '../utils/queries';\nimport spinner from '../assets/spinner.gif';\nimport { useStoreContext } from '../utils/GlobalState';\nimport Cart from '../components/cart/cart.component';\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from '../utils/actions';\nimport { idbPromise } from '../utils/helpers';\n\nfunction Detail() {\n  const [state, dispatch] = useStoreContext();\n  const { id } = useParams();\n\n  const [currentProduct, setCurrentProduct] = useState({});\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  const { products, cart } = state;\n\n  const history = useHistory();\n\n  useEffect(() => {\n    // already in global store\n    if (products.length) {\n      setCurrentProduct(products.find(product => product._id === id));\n    }\n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n\n      data.products.forEach(product => {\n        idbPromise('products', 'put', product);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise('products', 'get').then(indexedProducts => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts,\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find(cartItem => cartItem._id === id);\n\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      // if we're updating quantity, use existing item data and increment purchaseQuantity value by one\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct, purchaseQuantity: 1 },\n      });\n      // if product isn't in the cart yet, add it to the current shopping cart in IndexedDB\n      idbPromise('cart', 'put', {\n        ...currentProduct,\n        purchaseQuantity: 1,\n      });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id,\n    });\n\n    // upon removal from cart, delete the item from IndexedDB using the `currentProduct._id` to locate what to remove\n    idbPromise('cart', 'delete', { ...currentProduct });\n  };\n\n  return (\n    <>\n      {currentProduct ? (\n        <div className='container'>\n          <Button className='mt-3' onClick={history.goBack}>\n            ← Back to Products\n          </Button>\n\n          <h2>{currentProduct.name}</h2>\n\n          <p>{currentProduct.description}</p>\n\n          <p>\n            <strong>Price:</strong>${currentProduct.price}{' '}\n            <button className='btn btn-success' onClick={addToCart}>\n              Add to cart\n            </button>\n            <button\n              className='btn btn-danger'\n              disabled={!cart.find(p => p._id === currentProduct._id)}\n              onClick={removeFromCart}\n            >\n              Remove from Cart\n            </button>\n          </p>\n\n          <img\n            className='product-detail mb-5'\n            src={`/images/${currentProduct.image}`}\n            alt={currentProduct.name}\n          />\n        </div>\n      ) : null}\n      {loading ? <img src={spinner} alt='loading' /> : null}\n      <Cart />\n    </>\n  );\n}\n\nexport default Detail;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from 'react';\nimport Jumbotron from '../components/jumbotron/jumbotron.component';\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role='img' aria-label='Face With Rolling Eyes Emoji'>\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($products: [ID]!) {\n    addOrder(products: $products) {\n      purchaseDate\n      products {\n        _id\n        name\n        description\n        price\n        quantity\n        category {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\n\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({\n    email: '',\n    password: '',\n  });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: {\n          email: formState.email,\n          password: formState.password,\n        },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className='container my-1'>\n      <Link to='/signup'>← Go to Signup</Link>\n\n      <h2>Login</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className='flex-row space-between my-2'>\n          <label htmlFor='email'>Email address:</label>\n          <input\n            placeholder='youremail@test.com'\n            name='email'\n            type='email'\n            id='email'\n            onChange={handleChange}\n          />\n        </div>\n        <div className='flex-row space-between my-2'>\n          <label htmlFor='pwd'>Password:</label>\n          <input\n            placeholder='******'\n            name='password'\n            type='password'\n            id='pwd'\n            onChange={handleChange}\n          />\n        </div>\n        {error ? (\n          <div>\n            <p className='error-text'>\n              The provided credentials are incorrect\n            </p>\n          </div>\n        ) : null}\n        <div className='flex-row flex-end'>\n          <button type='submit'>Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({\n    email: '',\n    password: '',\n  });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className='container my-1'>\n      <Link to='/login'>← Go to Login</Link>\n\n      <h2>Signup</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className='flex-row space-between my-2'>\n          <label htmlFor='firstName'>First Name:</label>\n          <input\n            placeholder='First'\n            name='firstName'\n            type='firstName'\n            id='firstName'\n            onChange={handleChange}\n          />\n        </div>\n        <div className='flex-row space-between my-2'>\n          <label htmlFor='lastName'>Last Name:</label>\n          <input\n            placeholder='Last'\n            name='lastName'\n            type='lastName'\n            id='lastName'\n            onChange={handleChange}\n          />\n        </div>\n        <div className='flex-row space-between my-2'>\n          <label htmlFor='email'>Email:</label>\n          <input\n            placeholder='youremail@test.com'\n            name='email'\n            type='email'\n            id='email'\n            onChange={handleChange}\n          />\n        </div>\n        <div className='flex-row space-between my-2'>\n          <label htmlFor='pwd'>Password:</label>\n          <input\n            placeholder='******'\n            name='password'\n            type='password'\n            id='pwd'\n            onChange={handleChange}\n          />\n        </div>\n        <div className='flex-row flex-end'>\n          <button type='submit'>Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Navbar, Nav, Dropdown } from \"rsuite\";\nimport { useQuery } from \"@apollo/client\";\nimport \"rsuite/dist/rsuite.min.css\";\n\nimport BwsLogo from \"../../assets/bws-logo.png\";\nimport { QUERY_CATEGORIES } from \"../../utils/queries\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { UPDATE_CATEGORIES } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport Auth from \"../../utils/auth\";\nimport Cart from \"../cart/cart.component\";\n\nimport \"./navigation.styles.css\";\n\nfunction Navigation() {\n  const [state, dispatch] = useStoreContext();\n\n  const { categories } = state;\n\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories,\n      });\n      categoryData.categories.forEach((category) => {\n        idbPromise(\"categories\", \"put\", category);\n      });\n    } else if (!loading) {\n      idbPromise(\"categories\", \"get\").then((categories) => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories,\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const toggleCollapse = (collapseID) => () => {\n    this.setState((prevState) => ({\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\",\n    }));\n  };\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <Nav pullRight>\n          <Nav.Item href='/orderHistory' className='nav-item'>\n            Order History\n          </Nav.Item>\n          <Nav.Item href='/' onClick={() => Auth.logout()} className='nav-item'>\n            Logout\n          </Nav.Item>\n        </Nav>\n      );\n    } else {\n      return (\n        <Nav pullRight>\n          <Nav.Item href='/signup' className='nav-item'>\n            Signup\n          </Nav.Item>\n          <Nav.Item href='/login' className='nav-item'>\n            Login\n          </Nav.Item>\n        </Nav>\n      );\n    }\n  }\n\n  return (\n    <div className='row justify-content-center nav-container'>\n      <Cart />\n      <a className='col-12 col-md-2 nav-logo' href='/'>\n        <img src={BwsLogo} className='nav-logo' alt='Broadway Logo' />\n      </a>\n      <div className='col-12 col-md-6 desktop-nav'>\n        <Navbar className='navbar' pullRight>\n          <Nav>\n            <Nav.Item href='/' className='nav-item'>\n              Home\n            </Nav.Item>\n            <Nav.Item href='/about' className='nav-item'>\n              About\n            </Nav.Item>\n            <Link to={`/camber-plates/${categories[2]?._id}`}>\n              <Nav.Item href='/camber-plates' className='nav-item camb-class'>\n                Camber Plates & Top Mounts\n              </Nav.Item>\n            </Link>\n            <Dropdown className='nav-item' title='Shop by Make'>\n              <Link to={`/bmw/${categories[0]?._id}`}>\n                <Dropdown.Item href='/bmw' className='nav-item'>\n                  BMW\n                </Dropdown.Item>\n              </Link>\n              <Link to={`/volkswagen/${categories[1]?._id}`}>\n                <Dropdown.Item href='/audi' className='nav-item'>\n                  Volkswagen\n                </Dropdown.Item>\n              </Link>\n            </Dropdown>\n          </Nav>\n          <Nav pullRight>{showNavigation()}</Nav>\n        </Navbar>\n      </div>\n      <div className='col-12 mobile-nav'>\n        <Navbar className='navbar'>\n          <Nav>\n            <Dropdown pullRight className='nav-item' title='Menu'>\n              <Link to='/'>\n                <Dropdown.Item href='/' className='nav-item'>\n                  Home\n                </Dropdown.Item>\n              </Link>\n              <Link to='/about'>\n                <Dropdown.Item href='/about' className='nav-item'>\n                  About\n                </Dropdown.Item>\n              </Link>\n              <Link to={`/camber-plates/${categories[2]?._id}`}>\n                <Dropdown.Item\n                  href='/camber-plates'\n                  className='nav-item camb-class'\n                >\n                  Camber Plates & Top Mounts\n                </Dropdown.Item>\n              </Link>\n\n              <Link to={`/bmw/${categories[0]?._id}`}>\n                <Dropdown.Item href='/bmw' className='nav-item'>\n                  BMW\n                </Dropdown.Item>\n              </Link>\n\n              <Link to={`/volkswagen/${categories[1]?._id}`}>\n                <Dropdown.Item href='/audi' className='nav-item'>\n                  Volkswagen\n                </Dropdown.Item>\n              </Link>\n            </Dropdown>\n          </Nav>\n          <Nav pullLeft>{showNavigation()}</Nav>\n        </Navbar>\n      </div>\n    </div>\n  );\n}\n\nexport default Navigation;\n","import React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport { useQuery } from '@apollo/client';\n\nimport { QUERY_USER } from '../utils/queries';\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  console.log(data);\n\n  const history = useHistory();\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className='container my-1'>\n        <Button onClick={history.goBack}>← Back to Products</Button>\n\n        {user ? (\n          <>\n            <h2>\n              Order History for {user.firstName} {user.lastName}\n            </h2>\n            {user.orders.map(order => (\n              <div key={order._id} className='my-2'>\n                <h3>\n                  {new Date(\n                    parseInt(order.purchaseDate)\n                  ).toLocaleDateString()}\n                </h3>\n                <div className='flex-row'>\n                  {order.products.map(\n                    ({ _id, image, name, price }, index) => (\n                      <div key={index} className='card px-1 py-1'>\n                        <Link to={`/products/${_id}`}>\n                          <img\n                            style={{ width: '20%' }}\n                            alt={name}\n                            src={`/images/${image}`}\n                          />\n                          <p>{name}</p>\n                        </Link>\n                        <div>\n                          <span>${price}</span>\n                        </div>\n                      </div>\n                    )\n                  )}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default OrderHistory;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons';\n\nimport './footer.styles.css';\n\nconst Footer = () => {\n  return (\n    <div>\n      <footer className='site-footer'>\n        <div className='container'>\n          <div className='row'>\n            <div className='col-sm-12 col-md-6'>\n              <h6>About</h6>\n              <p className='text-justify'>\n                Lorem, ipsum dolor sit amet consectetur adipisicing\n                elit. Laboriosam, doloribus nam officia molestias at\n                dolor, quos temporibus eius dolore neque aliquam qui\n                magnam consequuntur, ex non provident ipsam ab\n                voluptates.\n              </p>\n            </div>\n\n            <div className='col-xs-6 col-md-3'>\n              <h6>Products</h6>\n              <ul className='footer-links'>\n                <li>\n                  <a href='/'>Merch</a>\n                </li>\n                <li>\n                  <a href='/'>Springs</a>\n                </li>\n                <li>\n                  <a href='/'>Parts and Accessories</a>\n                </li>\n                <li>\n                  <a href='/'>BWS Top Hats</a>\n                </li>\n              </ul>\n            </div>\n\n            <div className='col-xs-6 col-md-3'>\n              <h6>Quick Links</h6>\n              <ul className='footer-links'>\n                <li>\n                  <a href='/about/'>About Us</a>\n                </li>\n                <li>\n                  <a href='/about'>Contact Us</a>\n                </li>\n                <li>\n                  <a href='/'>Contribute</a>\n                </li>\n                <li>\n                  <a href='http://scanfcode.com/privacy-policy/'>\n                    Privacy Policy\n                  </a>\n                </li>\n                <li>\n                  <a href='/'>Sitemap</a>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n        <div className='container'>\n          <div className='row'>\n            <div className='col-md-8 col-sm-6 col-xs-12'>\n              <p className='copyright-text'>\n                Copyright &copy; {new Date().getFullYear()} All Rights\n                Reserved\n              </p>\n            </div>\n\n            <div className='col-md-4 col-sm-6 col-xs-12'>\n              <ul className='social-icons'>\n                <li>\n                  <a className='facebook' href='/'>\n                    <i class='fa-brands fa-facebook-f'></i>\n                  </a>\n                </li>\n                <li>\n                  <a className='twitter' href='/'>\n                    <i class='fa-brands fa-twitter'></i>\n                  </a>\n                </li>\n                <li>\n                  <a className='instagram' href='/'>\n                    <i class='fa-brands fa-instagram'></i>\n                  </a>\n                </li>\n                <li>\n                  <a className='youtube' href='/'>\n                    <i class='fa-brands fa-youtube'></i>\n                  </a>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </footer>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\n\nimport Jumbotron from '../components/jumbotron/jumbotron.component';\nimport { ADD_ORDER } from '../utils/mutations';\nimport { idbPromise } from '../utils/helpers';\n\nfunction Success() {\n  const [addOrder] = useMutation(ADD_ORDER);\n\n  useEffect(() => {\n    async function saveOrder() {\n      const cart = await idbPromise('cart', 'get');\n      const products = cart.map(item => item._id);\n\n      if (products.length) {\n        const { data } = await addOrder({ variables: { products } });\n        const productData = data.addOrder.products;\n\n        productData.forEach(item => {\n          idbPromise('cart', 'delete', item);\n        });\n      }\n\n      setTimeout(() => {\n        window.location.assign('/');\n      }, 3000);\n    }\n\n    saveOrder();\n  }, [addOrder]);\n\n  return (\n    <div>\n      <Jumbotron>\n        <h1>Success!</h1>\n        <h2>Thank you for your purchase!</h2>\n        <h2>You will now be redirected to the home page</h2>\n      </Jumbotron>\n    </div>\n  );\n}\n\nexport default Success;\n","import React from 'react';\n\nimport './form.styles.css';\n\nconst Form = () => {\n  return (\n    <div class='form-style-6'>\n      <h1>Send Us A Message</h1>\n      <form>\n        <input\n          required\n          type='text'\n          name='field1'\n          placeholder='Your Name'\n        />\n        <input\n          required\n          type='email'\n          name='field2'\n          placeholder='Email Address'\n        />\n        <textarea\n          required\n          name='field3'\n          placeholder='Type your Message'\n        ></textarea>\n        <input className='form-input' type='submit' value='Send' />\n      </form>\n    </div>\n  );\n};\nexport default Form;\n","import React from 'react';\nimport { Container, Accordion } from 'react-bootstrap';\n\nconst Info = () => {\n  return (\n    <Container>\n      <div className='pt-4 accordion' id='accordionExample'>\n        <div className='card'>\n          <div className='card-header' id='headingOne'>\n            <h2 className='mb-0'>\n              <button\n                className='btn btn-link'\n                type='button'\n                data-toggle='collapse'\n                data-target='#collapseOne'\n                aria-expanded='true'\n                aria-controls='collapseOne'\n              >\n                About Us\n              </button>\n            </h2>\n          </div>\n\n          <div\n            id='collapseOne'\n            className='collapse show'\n            aria-labelledby='headingOne'\n            data-parent='#accordionExample'\n          >\n            <div className='card-body'>\n              Anim pariatur cliche reprehenderit, enim eiusmod high\n              life accusamus terry richardson ad squid. 3 wolf moon\n              officia aute, non cupidatat skateboard dolor brunch.\n              Food truck quinoa nesciunt laborum eiusmod. Brunch 3\n              wolf moon tempor, sunt aliqua put a bird on it squid\n              single-origin coffee nulla assumenda shoreditch et.\n              Nihil anim keffiyeh helvetica, craft beer labore wes\n              anderson cred nesciunt sapiente ea proident. Ad vegan\n              excepteur butcher vice lomo. Leggings occaecat craft\n              beer farm-to-table, raw denim aesthetic synth nesciunt\n              you probably haven't heard of them accusamus labore\n              sustainable VHS.\n            </div>\n          </div>\n        </div>\n        <div className='card'>\n          <div className='card-header' id='headingTwo'>\n            <h2 className='mb-0'>\n              <button\n                className='btn btn-link collapsed'\n                type='button'\n                data-toggle='collapse'\n                data-target='#collapseTwo'\n                aria-expanded='false'\n                aria-controls='collapseTwo'\n              >\n                Engineering Process\n              </button>\n            </h2>\n          </div>\n          <div\n            id='collapseTwo'\n            className='collapse'\n            aria-labelledby='headingTwo'\n            data-parent='#accordionExample'\n          >\n            <div className='card-body'>\n              Anim pariatur cliche reprehenderit, enim eiusmod high\n              life accusamus terry richardson ad squid. 3 wolf moon\n              officia aute, non cupidatat skateboard dolor brunch.\n              Food truck quinoa nesciunt laborum eiusmod. Brunch 3\n              wolf moon tempor, sunt aliqua put a bird on it squid\n              single-origin coffee nulla assumenda shoreditch et.\n              Nihil anim keffiyeh helvetica, craft beer labore wes\n              anderson cred nesciunt sapiente ea proident. Ad vegan\n              excepteur butcher vice lomo. Leggings occaecat craft\n              beer farm-to-table, raw denim aesthetic synth nesciunt\n              you probably haven't heard of them accusamus labore\n              sustainable VHS.\n            </div>\n          </div>\n        </div>\n      </div>\n    </Container>\n  );\n};\n\nexport default Info;\n","import React from 'react';\n\nimport Form from '../components/form/form.component';\nimport Info from '../components/information/information.component';\n\nconst About = () => {\n  return (\n    <div>\n      <Info />\n      <br />\n      <Form />\n    </div>\n  );\n};\n\nexport default About;\n","import React, { useState, useEffect } from 'react';\nimport {\n  CardElement,\n  useStripe,\n  useElements,\n} from '@stripe/react-stripe-js';\nimport { useQuery, useMutation } from '@apollo/client';\n\nimport { QUERY_USER } from '../../utils/queries';\nimport { ADD_ORDER } from '../../utils/mutations';\nimport Auth from '../../utils/auth';\nimport { idbPromise } from '../../utils/helpers';\n\nimport './payment-form.styles.css';\n\nconst PaymentForm = ({ cartItems, cartTotal }) => {\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const { data } = useQuery(QUERY_USER);\n  const [addOrder] = useMutation(ADD_ORDER);\n\n  let user;\n  if (data) {\n    user = data.user;\n  }\n\n  const [isProcessingPayment, setIsProcessingPayment] =\n    useState(false);\n\n  const paymentHandler = async e => {\n    e.preventDefault();\n    if (!stripe || !elements) {\n      return;\n    }\n    setIsProcessingPayment(true);\n    const response = await fetch('/api/create-payment-intent', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ amount: cartTotal * 100 }),\n    }).then(res => {\n      return res.json();\n    });\n\n    const clientSecret = response.client_secret;\n\n    const paymentResult = await stripe.confirmCardPayment(\n      clientSecret,\n      {\n        payment_method: {\n          card: elements.getElement(CardElement),\n          billing_details: {\n            name: Auth.loggedIn() ? user.firstName : 'Guest',\n          },\n        },\n      }\n    );\n\n    setIsProcessingPayment(false);\n\n    if (paymentResult.error) {\n      alert(paymentResult.error.message);\n    } else {\n      if (paymentResult.paymentIntent.status === 'succeeded') {\n        alert('Payment Successful!');\n\n        async function saveOrder() {\n          const cart = await idbPromise('cart', 'get');\n          const products = cart.map(item => item._id);\n\n          if (products.length) {\n            const { data } = await addOrder({\n              variables: { products },\n            });\n            const productData = data.addOrder.products;\n\n            productData.forEach(item => {\n              idbPromise('cart', 'delete', item);\n            });\n          }\n        }\n\n        setTimeout(() => {\n          window.location.assign('/');\n        }, 3000);\n\n        saveOrder();\n      }\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={paymentHandler}>\n        <h2>Credit Card Payment:</h2>\n        <CardElement />\n        <button>Pay Now</button>\n      </form>\n    </div>\n  );\n};\n\nexport default PaymentForm;\n","import React, { useContext } from 'react';\n\nimport { useStoreContext } from '../../utils/GlobalState';\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n} from '../../utils/actions';\nimport { idbPromise } from '../../utils/helpers';\n\nimport './checkout.item.styles.css';\n\nconst CheckoutItem = ({ cartItem }) => {\n  const [state, dispatch] = useStoreContext();\n  const { name, image, price, purchaseQuantity } = cartItem;\n\n  const onChange = e => {\n    const value = e.target.value;\n\n    if (value === '0') {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: cartItem._id,\n      });\n\n      idbPromise('cart', 'delete', { ...cartItem });\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: cartItem._id,\n        purchaseQuantity: parseInt(value),\n      });\n\n      idbPromise('cart', 'put', {\n        ...cartItem,\n        purchaseQuantity: parseInt(value),\n      });\n    }\n  };\n\n  const removeFromCart = item => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id,\n    });\n    idbPromise('cart', 'delete', { ...item });\n  };\n\n  return (\n    <div className='checkout-item-container'>\n      <div className='image-container'>\n        <img\n          className='checkout-image'\n          src={`../../../images/${image}`}\n          alt={`${name}`}\n        />\n      </div>\n      <span className='name'> {name} </span>\n      <span className='quantity'>\n        <input\n          className='qty'\n          type='number'\n          placeholder='1'\n          value={purchaseQuantity}\n          onChange={onChange}\n          style={{ color: 'black' }}\n        />\n      </span>\n      <span className='price'> {price}</span>\n      <div\n        className='remove-button'\n        onClick={() => removeFromCart(cartItem)}\n      >\n        &#10005;\n      </div>\n    </div>\n  );\n};\n\nexport default CheckoutItem;\n","import React, { Component, useEffect } from 'react';\n\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { TOGGLE_CART } from '../../utils/actions';\n\nimport PaymentForm from '../../components/payment-form/payment-form.component';\nimport CheckoutItem from '../../components/checkout-item/checkout-item.component';\n\nimport './checkout.styles.css';\n\nconst Checkout = () => {\n  const [state, dispatch] = useStoreContext();\n  const cartItems = state.cart;\n\n  function toggleCart() {\n    dispatch({ type: TOGGLE_CART });\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    state.cart.forEach(item => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  useEffect(() => {\n    toggleCart();\n  }, [state.cart]);\n\n  useEffect(() => {\n    const cartTotal = calculateTotal();\n  }, [state.cart]);\n\n  return (\n    <div className='checkout-container'>\n      <div className='checkout-header'>\n        <div className='header-block'>\n          <span>Product</span>\n        </div>\n        <div className='header-block'>\n          <span>Description</span>\n        </div>\n        <div className='header-block'>\n          <span>Quantity</span>\n        </div>\n        <div className='header-block'>\n          <span>Price</span>\n        </div>\n        <div className='header-block'>\n          <span>Remove</span>\n        </div>\n      </div>\n      {state.cart.map(cartItem => (\n        <CheckoutItem key={cartItem._id} cartItem={cartItem} />\n      ))}\n      <div className='total'>TOTAL: ${calculateTotal()}</div>\n      <PaymentForm\n        cartItems={state.cart}\n        cartTotal={calculateTotal()}\n      />\n    </div>\n  );\n};\n\nexport default Checkout;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { pluralize } from '../../utils/helpers';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport {\n  ADD_TO_CART,\n  UPDATE_CART_QUANTITY,\n} from '../../utils/actions';\nimport { idbPromise } from '../../utils/helpers';\n\nimport './product-item.styles.css';\n\nfunction ProductItem(item) {\n  const { image, name, _id, price, quantity, description } = item;\n  const [state, dispatch] = useStoreContext();\n\n  const { cart } = state;\n\n  const addToCart = () => {\n    const itemInCart = cart.find(cartItem => cartItem._id === _id);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item, purchaseQuantity: 1 },\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n    }\n  };\n\n  return (\n    <div className='card mb-5' style={{ width: '18rem' }}>\n      <Link className='text-center' to={`/products/${_id}`}>\n        <img\n          src={`/images/${image}`}\n          className='card-img-top'\n          alt='product card'\n        />\n      </Link>\n      <div className='card-body'>\n        <h5 className='card-title'>{name}</h5>\n        <p className='card-text'>{description}</p>\n        <br />\n        <div>\n          {quantity} {pluralize('item', quantity)} in stock\n        </div>\n        <div>\n          <span>${price}</span>\n        </div>\n        <br />\n        <button\n          className='btn btn-success'\n          variant='primary'\n          onClick={addToCart}\n        >\n          Add to cart\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default ProductItem;\n","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\n\nimport ProductItem from '../product-item/product-item.component';\nimport { QUERY_PRODUCTS } from '../../utils/queries';\nimport spinner from '../../assets/spinner.gif';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\nimport { idbPromise } from '../../utils/helpers';\n\nfunction ProductList({ id }) {\n  const [state, dispatch] = useStoreContext();\n\n  const currentCategory = id;\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n\n      data.products.forEach(product => {\n        idbPromise('products', 'put', product);\n      });\n      // add else if to check if `loading` is undefined in `useQuery()` Hook\n    } else if (!loading) {\n      // since we're offline, get all of the data from the `products` store\n      idbPromise('products', 'get').then(products => {\n        // use retrieved data to set global state for offline browsing\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products,\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n\n    return state.products.filter(product => {\n      return product.category._id === currentCategory;\n    });\n  }\n\n  return (\n    <div className='my-2'>\n      <h2>Our Products:</h2>\n      {state.products.length ? (\n        <div className='row justify-content-center'>\n          {filterProducts().map(product => (\n            <ProductItem\n              key={product._id}\n              _id={product._id}\n              image={product.image}\n              name={product.name}\n              price={product.price}\n              quantity={product.quantity}\n              description={product.description}\n            />\n          ))}\n        </div>\n      ) : (\n        <h3>You haven't added any products yet!</h3>\n      )}\n      {loading ? <img src={spinner} alt='loading' /> : null}\n    </div>\n  );\n}\n\nexport default ProductList;\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\n\nimport ProductList from '../components/product-list/product-list.component';\n\nconst Shop = () => {\n  const { id } = useParams();\n\n  return (\n    <Container>\n      <div className='row justify-content-around'>\n        <ProductList id={id} />\n      </div>\n    </Container>\n  );\n};\n\nexport default Shop;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport { StoreProvider } from './utils/GlobalState';\n\nimport Home from './pages/Home';\nimport Detail from './pages/Detail';\nimport NoMatch from './pages/NoMatch';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Navigation from './components/navigation/navigation.component';\nimport OrderHistory from './pages/OrderHistory';\nimport Footer from './components/footer/footer.component';\nimport Success from './pages/Success';\nimport About from './pages/About';\nimport CheckoutPage from './pages/checkout/Checkout';\nimport Shop from './pages/Shop';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className='main-body'>\n          <StoreProvider>\n            <Navigation />\n            <Switch>\n              <Route exact path='/success' component={Success} />\n              <Route exact path='/' component={Home} />\n              <Route exact path='/login' component={Login} />\n              <Route exact path='/signup' component={Signup} />\n              <Route exact path='/bmw/:id' component={Shop} />\n              <Route exact path='/volkswagen/:id' component={Shop} />\n              <Route exact path='/about' component={About} />\n              <Route\n                exact\n                path='/checkout'\n                component={CheckoutPage}\n              />\n              <Route\n                exact\n                path='/camber-plates/:id'\n                component={Shop}\n              />\n              <Route\n                exact\n                path='/orderHistory'\n                component={OrderHistory}\n              />\n              <Route exact path='/products/:id' component={Detail} />\n              <Route component={NoMatch} />\n            </Switch>\n            <Footer />\n          </StoreProvider>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import { loadStripe } from '@stripe/stripe-js';\n\nexport const stripePromise = loadStripe(\n  process.env.REACT_APP_STRIPE_PUBLISHABLE_KEY\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { Elements } from '@stripe/react-stripe-js';\n\nimport App from './App';\nimport { stripePromise } from './utils/stripe';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Elements stripe={stripePromise}>\n      <App />\n    </Elements>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}